[
  {
    "id": "product-136",
    "title": "Ruby HD",
    "slug": "/produtos/ruby-hd",
    "description": "Lupa Eletrônica de 4.3\" Portátil",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-103",
    "title": "Transformer HD com Voz",
    "slug": "/produtos/transformer-hd-com-voz",
    "description": "Ampliador Portátil com Voz",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-65",
    "title": "BrailleBox",
    "slug": "/produtos/braille-box",
    "description": "Impressora Braille de Grande Porte",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-134",
    "title": "Papel Encapsulado A3 - 100 Folhas",
    "slug": "/produtos/papel-encapsulado-a3",
    "description": "Papel A3 para Impressora Térmica de Relevos Teca-Fuser",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-131",
    "title": "Teclado Ampliado",
    "slug": "/produtos/teclado-ampliado",
    "description": "Teclado Ampliado Tecassistiva",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-101",
    "title": "Onyx Deskset HD 24\"",
    "slug": "/produtos/onyx-deskset-24",
    "description": "Lupa Eletrônica de Mesa",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-109",
    "title": "Everest DV5",
    "slug": "/produtos/everest",
    "description": "Impressora Braille de Folha Solta",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-67",
    "title": "Focus 80 Blue",
    "slug": "/produtos/focus-80-blue",
    "description": "Linha Braille de 80 Células",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-60",
    "title": "Traveller HD",
    "slug": "/produtos/traveller-hd",
    "description": "Ampliador Eletrônico Portátil",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-81",
    "title": "ClearView 24″ Full HD",
    "slug": "/produtos/clearview-24",
    "description": "Ampliador Eletrônico de Mesa com Voz",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-94",
    "title": "PUMA 7",
    "slug": "/produtos/puma-7",
    "description": "Impressora Braille de Chapa",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-71",
    "title": "Ruby 10",
    "slug": "/produtos/ruby-10",
    "description": "Lupa Eletrônica com Voz",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-93",
    "title": "Liber",
    "slug": "/produtos/liber",
    "description": "Computador Braille",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-147",
    "title": "ZoomText Ampliador",
    "slug": "/produtos/zoomtext-ampliador",
    "description": "Ampliador de Telas",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-84",
    "title": "ClearView 24″ Full HD com Voz",
    "slug": "/produtos/clearview-24-com-voz",
    "description": "Ampliador de Mesa com Voz",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-149",
    "title": "Fusion",
    "slug": "/produtos/fusion",
    "description": "Software Ampliador e Leitor de Telas",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-98",
    "title": "Focus 40 Blue",
    "slug": "/produtos/focus-40-blue",
    "description": "Linha Braille de 40 células",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-137",
    "title": "Ruby XL HD",
    "slug": "/produtos/ruby-xl-hd",
    "description": "Lupa Eletrônica de 5\" Portátil",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-56",
    "title": "ClearReader",
    "slug": "/produtos/clearreader",
    "description": "Leitor e digitalizador autônomo",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-146",
    "title": "ZoomText Ampliador com Voz",
    "slug": "/produtos/zoomtext-com-voz",
    "description": "Ampliador de Telas com Voz",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-110",
    "title": "Abafador para Impressora Index Braille",
    "slug": "/produtos/abafador-index",
    "description": "Abafador de ruídos para impressora Index Braille Basic e Index Braille Everest.",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-89",
    "title": "NSF Excel",
    "slug": "/produtos/nsf-excel",
    "description": "Impressora Rotativa",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-61",
    "title": "Ruby 7 HD",
    "slug": "/produtos/ruby-7-hd",
    "description": "Lupa eletrônica portátil",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-138",
    "title": "Perkins Clássica",
    "slug": "/produtos/perkins-classica",
    "description": "Máquina de Escrever Braille",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-52",
    "title": "Mountbatten Tutor",
    "slug": "/produtos/mountbatten-tutor",
    "description": "Máquina de escrever e impressora braille",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-108",
    "title": "Basic DV5",
    "slug": "/produtos/basic",
    "description": "Impressora Braille Formulário Contínuo",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-68",
    "title": "Fanfold",
    "slug": "/produtos/fanfold",
    "description": "Impressora Braille de Grande Porte",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-55",
    "title": "Brinca Braille",
    "slug": "/produtos/brinca-braille",
    "description": "Ferramenta interativa para aprendizado do braille",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-122",
    "title": "Teca-Fuser",
    "slug": "/produtos/teca-fuser",
    "description": "Impressora Térmica mais rápida e eficiente do mercado",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-90",
    "title": "Onyx OCR",
    "slug": "/produtos/onyx-ocr",
    "description": "Ampliador de Mesa com Voz",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-92",
    "title": "Multiplano",
    "slug": "/produtos/multiplano",
    "description": "Matemática Concreta",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-132",
    "title": "Big Red",
    "slug": "/produtos/big-red",
    "description": "Acionador de Pressão com Grande Botão",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-142",
    "title": "Jaws",
    "slug": "/produtos/jaws",
    "description": "Software Leitor de Telas",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-133",
    "title": "BigTrack 2",
    "slug": "/produtos/big-track",
    "description": "Mouse Estacionário com Grande Esfera",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "product-135",
    "title": "Papel Encapsulado A4 - 100 Folhas",
    "slug": "/produtos/papel-encapsulado-a4",
    "description": "Papel A4 para Impressora Térmica de Relevos Teca-Fuser",
    "imageUrl": null,
    "type": "Produto"
  },
  {
    "id": "ata-15",
    "title": "Instituto Federal de Educação de São Paulo",
    "slug": "/atas-abertas",
    "description": "",
    "type": "Ata"
  },
  {
    "id": "ata-16",
    "title": "Instituto Federal de Educação de São Paulo",
    "slug": "/atas-abertas",
    "description": "",
    "type": "Ata"
  },
  {
    "id": "software-26",
    "title": "Index Braille",
    "slug": "/suporte",
    "description": "Tipo: Driver",
    "type": "Software/Driver"
  },
  {
    "id": "software-15",
    "title": "Focus 40",
    "slug": "/suporte",
    "description": "Tipo: Driver",
    "type": "Software/Driver"
  },
  {
    "id": "software-18",
    "title": "Leitor de Telas JAWS ",
    "slug": "/suporte",
    "description": "Tipo: Software",
    "type": "Software/Driver"
  },
  {
    "id": "software-19",
    "title": "ZoomText Ampliador e Leitor",
    "slug": "/suporte",
    "description": "Tipo: Software",
    "type": "Software/Driver"
  },
  {
    "id": "software-21",
    "title": "Fusion",
    "slug": "/suporte",
    "description": "Tipo: Software",
    "type": "Software/Driver"
  },
  {
    "id": "software-23",
    "title": "OpenBook",
    "slug": "/suporte",
    "description": "Tipo: Software",
    "type": "Software/Driver"
  },
  {
    "id": "page-src\\app\\page.js",
    "title": "Src\\app\\page.js",
    "slug": "src\\app\\page.js",
    "description": "import BannerSlider from \"@/components/BannerSlider\"; import FeaturedProductsSlider from \"@/components/FeaturedProductsSlider\"; import VideoSection fr...",
    "content": "import BannerSlider from \"@/components/BannerSlider\"; import FeaturedProductsSlider from \"@/components/FeaturedProductsSlider\"; import VideoSection from \"@/components/VideoSection\"; import ManufacturersGrid from \"@/components/ManufacturersGrid\"; import TestimonialSection from \"@/components/TestimonialSection\"; import { getBanners, getFeaturedProducts, getManufacturers, getAllTestimonials, getHomeVideos } from \"@/lib/api\"; import Link from 'next/link'; export default async function Home() { // Busca os dados da API em paralelo para otimizar o tempo de build const [banners, featuredProducts, manufacturers, testimonials, homeVideos] = await Promise.all([ getBanners(), getFeaturedProducts(), getManufacturers(), getAllTestimonials(), getHomeVideos(), ]); return ( {/* Seção Sobre a Tecassistiva */} Tecassistiva A Tecassistiva foi fundada em 2007, visando atender a grande demanda reprimida de produtos e serviços de qualidade com preços competitivos, que impediam há muitos anos que as pessoas com deficiência no Brasil, tivessem acesso ao grande desenvolvimento tecnológico que vinha acontecendo em outros países. O desenvolvimento de projetos inovadores para pessoas com deficiência, com sustentabilidade, tem sido o principal objetivo da Tecassistiva. Conheça a nossa história {/* Novas seções adicionadas */} ); }",
    "type": "Página"
  },
  {
    "id": "page-src\\app\\tecassistiva\\page.js",
    "title": "Tecassistiva",
    "slug": "src\\app\\tecassistiva\\page.js",
    "description": "import Link from 'next/link'; import { getAllTestimonials } from '@/lib/api'; import TestimonialSection from '@/components/TestimonialSection'; // Com...",
    "content": "import Link from 'next/link'; import { getAllTestimonials } from '@/lib/api'; import TestimonialSection from '@/components/TestimonialSection'; // Componente da Página export default async function TecassistivaPage() { const testimonials = await getAllTestimonials(); return ( {/* O padding foi ajustado para ser responsivo */} {/* Breadcrumbs */} Página Inicial &gt; A Tecassistiva {/* Seção Principal */} Tecassistiva {/* Texto de apresentação em 2 colunas */} A TECA foi fundada em 2007, visando atender a grande demanda reprimida de produtos e serviços de qualidade com preços competitivos, que impediam há muitos anos que as pessoas com deficiência no Brasil, tivessem acesso ao grande desenvolvimento tecnológico que vinha acontecendo em outros países. Atuando como fomentadora e alinhada com os projetos públicos, a TECA se tornou em poucos anos a lider do setor no Brasil e uma das maiores das distribuidoras internacionais de Tecnologia Assistiva. Esse crescimento exigiu o fortalecimento de seus canais de distribuição e de suporte, principalmente para o atendimento de milhares de escolas, bibliotecas, universidades e centros de pesquisa. Na área de desenvolvimento, além de localizar para o português do Brasil diversos programas de computador e equipamentos que distribui, a TECA está fazendo um investimento significativo, em conjunto com órgãos de fomento e parcerias internacionais, para que o Brasil em curto prazo, se torne também um desenvolvedor e produtor de Tecnologia Assistiva. {/* Vídeo Institucional */} Vídeo Apresentação Teca {/* Seção Missão, Visão e Valores com o novo layout */} Missão Desenvolver e disseminar Tecnologia Assistiva no Brasil, por meio da oferta de produtos e serviços de excelência que contribuam para a melhoria da qualidade de vida das pessoas com deficiência e da comunidade em geral. Visão Ser a empresa de referência em Tecnologia Assistiva, reconhecida pela comunidade, colaboradores, fornecedores e investidores, pela qualidade de seus produtos, serviços e apoio institucional. Valores Valorização da Pessoa com Deficiência Ética Inovação Trabalho em equipe Qualidade Sustentabilidade ); }",
    "type": "Página"
  },
  {
    "id": "page-src\\app\\suporte\\page.js",
    "title": "Src\\app\\suporte\\page.js",
    "slug": "src\\app\\suporte\\page.js",
    "description": "import { getProductsWithDocuments, getSoftwareAndDrivers, getAllCategories } from '@/lib/api'; import SupportPageClient from '@/components/SupportPage...",
    "content": "import { getProductsWithDocuments, getSoftwareAndDrivers, getAllCategories } from '@/lib/api'; import SupportPageClient from '@/components/SupportPageClient'; import Breadcrumbs from '@/components/Breadcrumbs'; export const metadata = { title: 'Suporte | Tecassistiva', description: 'Encontre documentos, manuais, softwares, drivers e utilitários para os produtos Tecassistiva.', }; export default async function SuportePage() { // Buscando todos os dados em paralelo para eficiência const [products, software, categories] = await Promise.all([ getProductsWithDocuments(), getSoftwareAndDrivers(), getAllCategories(), ]); const breadcrumbs = [ { name: 'Página Inicial', path: '/' }, { name: 'Suporte', path: '/suporte' }, ]; return ( ); }",
    "type": "Página"
  },
  {
    "id": "page-src\\app\\contato\\page.js",
    "title": "Contato",
    "slug": "src\\app\\contato\\page.js",
    "description": "import Link from 'next/link'; import ContactForm from '@/components/ContactForm'; export default function ContatoPage() { return ( Página Inicial &gt;...",
    "content": "import Link from 'next/link'; import ContactForm from '@/components/ContactForm'; export default function ContatoPage() { return ( Página Inicial &gt; Contato Contato Fale conosco para dúvidas, orçamentos e suporte. Preencha o formulário ou utilize um de nossos canais de atendimento. {/* Coluna do Formulário */} {/* Coluna de Informações */} Informações Telefone: +55 (11) 3266-4311 WhatsApp: +55 (11) 9 9597-8139 Email: teca@tecassistiva.com.br Endereço: R. das Camélias, 37 - Mirandópolis, São Paulo - SP Horário de Atendimento: Seg-Qui 8h-18h e Sexta 8h-17h Nossa Localização ); }",
    "type": "Página"
  },
  {
    "id": "page-src\\app\\busca\\page.js",
    "title": "Resultados da Busca",
    "slug": "src\\app\\busca\\page.js",
    "description": "\"use client\"; import { useSearchParams } from 'next/navigation'; import { useEffect, useState, Suspense } from 'react'; import ProductCard from '@/com...",
    "content": "\"use client\"; import { useSearchParams } from 'next/navigation'; import { useEffect, useState, Suspense } from 'react'; import ProductCard from '@/components/ProductCard'; import SearchResultCard from '@/components/SearchResultCard'; import Link from 'next/link'; function SearchResults() { const searchParams = useSearchParams(); const query = searchParams.get('q'); const [results, setResults] = useState({}); const [isLoading, setIsLoading] = useState(true); const [error, setError] = useState(null); useEffect(() => { const performSearch = async () => { setIsLoading(true); setError(null); try { const response = await fetch(`/search-data.json?v=${new Date().getTime()}`); if (!response.ok) { throw new Error('Não foi possível carregar o índice de busca.'); } const data = await response.json(); if (!query) { setResults({}); } else { const lowerCaseQuery = query.toLowerCase(); const filteredData = data.filter((item) => { const title = item.title || ''; const description = item.description || ''; const content = item.content || ''; return ( title.toLowerCase().includes(lowerCaseQuery) || description.toLowerCase().includes(lowerCaseQuery) || content.toLowerCase().includes(lowerCaseQuery) ); }); // Agrupa os resultados por tipo const groupedResults = filteredData.reduce((acc, item) => { const type = item.type || 'Outros'; if (!acc[type]) { acc[type] = []; } acc[type].push(item); return acc; }, {}); setResults(groupedResults); } } catch (err) { setError('Falha ao carregar os dados de busca. Tente recarregar a página.'); console.error(err); } finally { setIsLoading(false); } }; performSearch(); }, [query]); if (isLoading) { return Carregando resultados... ; } if (error) { return {error} ; } const resultKeys = Object.keys(results); return ( Resultados da Busca Você buscou por: {query} {resultKeys.length > 0 ? ( resultKeys.map(type => ( {type} ({results[type].length}) {results[type].map(item => { if (type === 'Produto') { // O ProductCard espera uma estrutura de dados específica. // Mapeamos o `imageUrl` do resultado da busca para o formato que o card espera. const product = { id: item.id.replace('product-', ''), attributes: { nome: item.title, slug: item.slug.replace('/produtos/', ''), descricao_curta: item.description, imagem_principal: { url: item.imageUrl }, } }; return ; } return ; })} )) ) : ( Nenhum resultado encontrado para este termo. )} ); } export default function SearchPage() { return ( Carregando busca... }> ); }",
    "type": "Página"
  },
  {
    "id": "page-src\\app\\atas-abertas\\page.js",
    "title": "Atas Abertas",
    "slug": "src\\app\\atas-abertas\\page.js",
    "description": "import { getOpenAtas } from '@/lib/api'; import Breadcrumbs from '@/components/Breadcrumbs'; import AtaCard from '@/components/AtaCard'; import Contac...",
    "content": "import { getOpenAtas } from '@/lib/api'; import Breadcrumbs from '@/components/Breadcrumbs'; import AtaCard from '@/components/AtaCard'; import ContactForm from '@/components/ContactForm'; import AdvantagesSection from '@/components/AdvantagesSection'; export const metadata = { title: 'Atas Abertas | Tecassistiva', description: 'Consulte as Atas de Registro de Preços (ARP) disponíveis e saiba como fazer a adesão.', }; export default async function AtasAbertasPage() { const atas = await getOpenAtas(); const breadcrumbs = [ { name: 'Página Inicial', path: '/' }, { name: 'Atas Abertas', path: '/atas-abertas' }, ]; return ( {/* 1. Seção de Título e Introdução */} Atas Abertas O que é o Sistema de Registro de Preços – SRP? Placeholder: O Sistema de Registro de Preços (SRP) é um procedimento especial de licitação que seleciona a proposta mais vantajosa para futuras e eventuais contratações governamentais. Em vez de realizar uma licitação para cada compra, o órgão público registra os preços de produtos e serviços de fornecedores qualificados, que se comprometem a manter a oferta por um período determinado (geralmente 12 meses). O que é uma Ata de Registro de Preços – ARP? Placeholder: A Ata de Registro de Preços (ARP) é o documento que formaliza o resultado do SRP. Nela, são registrados os preços, os fornecedores, os produtos e as condições de fornecimento. Essa ata funciona como um \"cardápio\" de produtos e serviços que os órgãos públicos podem adquirir de forma ágil e sem a necessidade de um novo processo licitatório completo, bastando apenas emitir uma ordem de compra. Queremos te contar mais, clique aqui. {/* 2. Seção da Lista de Atas */} Lista de ATAS disponíveis para você: {atas && atas.length > 0 ? ( atas.map((ata) => ) ) : ( Nenhuma ata aberta encontrada no momento. Por favor, verifique novamente mais tarde ou entre em contato para mais informações. )} {/* 3. Seção do Formulário de Contato */} {/* 4. Seção de Vantagens */} ); }",
    "type": "Página"
  },
  {
    "id": "page-src\\app\\ambientes\\page.js",
    "title": "Soluções por Ambientes",
    "slug": "src\\app\\ambientes\\page.js",
    "description": "import Link from 'next/link'; import Image from 'next/image'; import { ambientesData } from '@/lib/ambientes-data'; // Importa os dados estáticos impo...",
    "content": "import Link from 'next/link'; import Image from 'next/image'; import { ambientesData } from '@/lib/ambientes-data'; // Importa os dados estáticos import Breadcrumbs from '@/components/Breadcrumbs'; export const metadata = { title: 'Soluções por Ambientes | Tecassistiva', description: 'Descubra soluções de tecnologia assistiva organizadas por ambientes de aplicação.', }; export default function AmbientesPage() { const breadcrumbs = [ { name: 'Página Inicial', path: '/' }, { name: 'Soluções por Ambientes', path: '/ambientes' }, ]; return ( Soluções por Ambientes {ambientesData.map((ambiente, index) => { const isReversed = index % 2 !== 0; const textBgColor = index % 2 === 0 ? 'bg-tec-blue text-white' : 'bg-gray-200 text-gray-800'; const buttonColor = index % 2 === 0 ? 'bg-white text-tec-blue hover:bg-gray-100' : 'bg-tec-blue text-white hover:bg-blue-800'; return ( {/* Coluna da Imagem com Efeito de Zoom */} {/* Coluna do Texto e Botão */} {ambiente.nome} Descubra as soluções de tecnologia assistiva ideais para o ambiente de {ambiente.nome.toLowerCase()}. Ver Soluções ) })} ); }",
    "type": "Página"
  },
  {
    "id": "page-src\\app\\ambientes\\[slug]\\page.js",
    "title": "{`Soluções para ${ambiente.nome}`}",
    "slug": "src\\app\\ambientes\\[slug]\\page.js",
    "description": "import Image from 'next/image'; import Link from 'next/link'; import { ambientesData } from '@/lib/ambientes-data'; import { getAllProductsForDisplay ...",
    "content": "import Image from 'next/image'; import Link from 'next/link'; import { ambientesData } from '@/lib/ambientes-data'; import { getAllProductsForDisplay } from '@/lib/api'; // Reutiliza a função que busca todos os produtos import Breadcrumbs from '@/components/Breadcrumbs'; import ProductCard from '@/components/ProductCard'; import { notFound } from 'next/navigation'; // Gera as páginas estáticas no momento do build a partir dos dados estáticos export async function generateStaticParams() { return ambientesData.map((ambiente) => ({ slug: ambiente.slug, })); } export async function generateMetadata({ params }) { const ambiente = ambientesData.find(a => a.slug === params.slug); if (!ambiente) { return { title: 'Ambiente não encontrado' }; } return { title: `${ambiente.nome} | Soluções por Ambientes`, description: `Produtos recomendados para o ambiente: ${ambiente.nome}`, }; } export default async function AmbienteDetalhePage({ params }) { const ambiente = ambientesData.find(a => a.slug === params.slug); if (!ambiente) { notFound(); } const breadcrumbs = [ { name: 'Página Inicial', path: '/' }, { name: 'Soluções por Ambientes', path: '/ambientes' }, { name: ambiente.nome, path: `/ambientes/${ambiente.slug}` }, ]; // Caso 1: O ambiente tem sub-ambientes para exibir como cartões if (ambiente.subAmbientes && ambiente.subAmbientes.length > 0) { return ( {`Soluções para ${ambiente.nome}`} Selecione uma área abaixo para ver os produtos e recursos de tecnologia assistiva recomendados. {ambiente.subAmbientes.map(sub => ( {sub.nome} ))} ← Voltar para Ambientes ); } // Caso 2: O ambiente lista os produtos diretamente (lógica original) const allProducts = await getAllProductsForDisplay(); const produtosRecomendados = allProducts.filter(product => ambiente.productSlugs?.includes(product.slug) ); return ( {ambiente.nome} {produtosRecomendados.map(produto => ( ))} {produtosRecomendados.length === 0 && ( Nenhum produto recomendado para este ambiente no momento. )} ← Voltar para Ambientes ); }",
    "type": "Página"
  },
  {
    "id": "page-src\\app\\ambientes\\[slug]\\[subslug]\\page.js",
    "title": "{subAmbiente.nome}",
    "slug": "src\\app\\ambientes\\[slug]\\[subslug]\\page.js",
    "description": "import Image from 'next/image'; import Link from 'next/link'; import { ambientesData } from '@/lib/ambientes-data'; import { getAllProductsForDisplay ...",
    "content": "import Image from 'next/image'; import Link from 'next/link'; import { ambientesData } from '@/lib/ambientes-data'; import { getAllProductsForDisplay } from '@/lib/api'; import Breadcrumbs from '@/components/Breadcrumbs'; import ProductCard from '@/components/ProductCard'; import { notFound } from 'next/navigation'; // Gera as páginas estáticas para todas as sub-categorias no momento do build export async function generateStaticParams() { const paths = []; ambientesData.forEach(ambiente => { if (ambiente.subAmbientes) { ambiente.subAmbientes.forEach(sub => { paths.push({ slug: ambiente.slug, subslug: sub.slug }); }); } }); return paths; } export async function generateMetadata({ params }) { const ambiente = ambientesData.find(a => a.slug === params.slug); const subAmbiente = ambiente?.subAmbientes?.find(s => s.slug === params.subslug); if (!subAmbiente) { return { title: 'Página não encontrada' }; } return { title: `${subAmbiente.nome} | ${ambiente.nome}`, description: `Produtos recomendados para ${subAmbiente.nome} no ambiente ${ambiente.nome}.`, }; } export default async function SubAmbientePage({ params }) { const ambiente = ambientesData.find(a => a.slug === params.slug); const subAmbiente = ambiente?.subAmbientes?.find(s => s.slug === params.subslug); if (!ambiente || !subAmbiente) { notFound(); } const allProducts = await getAllProductsForDisplay(); const produtosRecomendados = allProducts.filter(product => subAmbiente.productSlugs?.includes(product.slug) ); const breadcrumbs = [ { name: 'Página Inicial', path: '/' }, { name: 'Soluções por Ambientes', path: '/ambientes' }, { name: ambiente.nome, path: `/ambientes/${ambiente.slug}` }, { name: subAmbiente.nome, path: `/ambientes/${ambiente.slug}/${subAmbiente.slug}` }, ]; return ( {subAmbiente.nome} {produtosRecomendados.map(produto => ( ))} {produtosRecomendados.length === 0 && ( Nenhum produto recomendado para esta área no momento. )} {`← Voltar para ${ambiente.nome}`} ); }",
    "type": "Página"
  }
]